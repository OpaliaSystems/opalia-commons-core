name: sbt CI for build, test and release actions

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - 'main'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # shallow clones should be disabled for a better relevancy of analysis
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
          architecture: x64
      - name: Cache Ivy packages
        uses: actions/cache@v2
        with:
          path: ~/.ivy2
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-ivy2
      - name: Prepare build tool
        run: |
          mkdir -p ~/.sbt/1.0/plugins/
          cp ./.github/workflows/global.sbt ~/.sbt/1.0/
          cp ./.github/workflows/plugins.sbt ~/.sbt/1.0/plugins/
      - name: Build project
        run: sbt compile
      - name: Test project
        run: sbt jacoco
      - name: Perform static code analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sbt sonarScan

  release:
    needs: test
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
      GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      PGP_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
          architecture: x64
      - name: Cache Ivy packages
        uses: actions/cache@v2
        with:
          path: ~/.ivy2
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-ivy2
      - name: Import GPG key
        run: echo "${GPG_SIGNING_KEY}" | base64 --decode | gpg --no-tty --batch --import
      - name: Prepare build tool
        run: |
          mkdir -p ~/.sbt/1.0/plugins/
          cp ./.github/workflows/global.sbt ~/.sbt/1.0/
          cp ./.github/workflows/plugins.sbt ~/.sbt/1.0/plugins/
      - name: Perform tagging if version has changed
        id: tagging
        uses: brettaufheber/auto-tagging-action@v1
        with:
          command: sbt -no-colors 'show version' | tail -n1 | cut -f 2 -d " "
          tag-prefix: 'v'
      - name: Publish to public Maven2 repository
        if: ${{ steps.tagging.outputs.tag-created == 'yes' || steps.tagging.outputs.strategy == 'snapshot' }}
        run: sbt publishSigned
